import json
import pandas as pd
import subprocess
import os

# Define the Ansible Playbook as a string
ansible_playbook = """---
- name: Run Memory Benchmark on Multiple Servers
  hosts: all
  gather_facts: yes
  tasks:
    - name: Install sysbench (if not installed)
      package:
        name: sysbench
        state: present

    - name: Run Memory Benchmark
      shell: |
        sysbench memory --memory-block-size=4K \\
        --memory-total-size=$(free -g | awk '/Mem:/ {print $2*5"G"}') \\
        --time=1800 --threads={{ ansible_processor_vcpus }} run | tee /tmp/sysbench_memory.log
      register: sysbench_output

    - name: Extract Benchmark Results
      shell: |
        grep "total number of events" /tmp/sysbench_memory.log | awk '{print $5}'
      register: total_events

    - name: Extract Events per Second
      shell: |
        grep "events per second" /tmp/sysbench_memory.log | awk '{print $4}'
      register: events_per_second

    - name: Return Data to Controller
      debug:
        msg: "Hostname={{ inventory_hostname }} Cores={{ ansible_processor_vcpus }} Total Events={{ total_events.stdout }} Events/sec={{ events_per_second.stdout }}"
"""

# Save the playbook to a temporary file
with open("memory_benchmark.yml", "w") as file:
    file.write(ansible_playbook)

# Run the Ansible Playbook
cmd = ["ansible-playbook", "-i", "inventory", "memory_benchmark.yml"]
result = subprocess.run(cmd, capture_output=True, text=True)

# Parse Ansible JSON Output
data = []
for line in result.stdout.split("\n"):
    if "Hostname=" in line:
        parts = line.split()
        hostname = parts[0].split("=")[1]
        cores = int(parts[1].split("=")[1])
        total_events = int(parts[2].split("=")[1])
        events_per_sec = float(parts[3].split("=")[1])
        data.append({"Hostname": hostname, "CPU Cores": cores, "Total Events": total_events, "Events/sec": events_per_sec})

# Convert to DataFrame
df = pd.DataFrame(data)

# Sort by Best Performance (Events/sec)
df = df.sort_values(by="Events/sec", ascending=False)

# Save to Excel
df.to_excel("memory_benchmark_results.xlsx", index=False)

# Clean up temporary playbook file
os.remove("memory_benchmark.yml")

print("âœ… Benchmark completed. Results saved to 'memory_benchmark_results.xlsx'")
